{
    "name": "private-extension-manager",
    "displayName": "Private Extension Manager",
    "description": "Manages extensions hosted in private NPM registries.",
    "version": "1.8.0",
    "publisher": "garmin",
    "license": "Apache-2.0",
    "author": {
        "name": "Garmin International"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/joelspadin-garmin/vscode-private-extension-manager.git",
        "directory": "extension"
    },
    "engines": {
        "vscode": "^1.63.0"
    },
    "extensionKind": [
        "workspace"
    ],
    "extensionPack": [
        "garmin.private-extension-manager-remote-helper"
    ],
    "icon": "media/icon.png",
    "categories": [
        "Other"
    ],
    "keywords": [
        "multi-root-ready"
    ],
    "activationEvents": [
        "workspaceContains:.vscode/extensions.private.json",
        "onView:privateExtensions.extensions",
        "onView:privateExtensions.recommended",
        "onCommand:privateExtensions.cache.delete",
        "onCommand:privateExtensions.cache.garbageCollect",
        "onCommand:privateExtensions.checkForUpdates",
        "onCommand:privateExtensions.configureWorkspaceRegistries",
        "onCommand:privateExtensions.configureRecommendedExtensions",
        "onCommand:privateExtensions.registry.add",
        "onCommand:privateExtensions.registry.remove"
    ],
    "main": "./dist/extension.js",
    "contributes": {
        "jsonValidation": [
            {
                "fileMatch": "extensions.private.json",
                "url": "./extensions.private.schema.json"
            }
        ],
        "languages": [
            {
                "id": "jsonc",
                "filenames": [
                    "extensions.private.json"
                ]
            }
        ],
        "configuration": {
            "type": "object",
            "title": "%configuration.title%",
            "properties": {
                "privateExtensions.registries": {
                    "type": "array",
                    "scope": "machine",
                    "description": "%configuration.registries.description%"
                },
                "privateExtensions.channels": {
                    "type": "object",
                    "scope": "machine",
                    "description": "%configuration.channels.description%"
                },
                "privateExtensions.updateCheckInterval": {
                    "type": "number",
                    "scope": "machine",
                    "description": "%configuration.updateCheckInterval.description%",
                    "default": 3600
                },
                "privateExtensions.allowInsecureContent": {
                    "type": "boolean",
                    "scope": "machine",
                    "description": "%configuration.allowInsecureContent.description%",
                    "default": false
                },
                "privateExtensions.autoUpdate": {
                    "type": "boolean",
                    "scope": "machine",
                    "description": "%configuration.autoUpdate.description%",
                    "default": false
                },
                "privateExtensions.autoReload": {
                    "type": "boolean",
                    "scope": "machine",
                    "description": "%configuration.autoReload.description%",
                    "default": false
                }
            }
        },
        "commands": [
            {
                "command": "privateExtensions.cache.delete",
                "title": "%command.cache.delete.title%",
                "category": "%command.category%"
            },
            {
                "command": "privateExtensions.cache.garbageCollect",
                "title": "%command.cache.garbageCollect.title%",
                "category": "%command.category%"
            },
            {
                "command": "privateExtensions.checkForUpdates",
                "title": "%command.checkForUpdates.title%",
                "category": "%command.category%"
            },
            {
                "command": "privateExtensions.configureWorkspaceRegistries",
                "title": "%command.configureWorkspaceRegistries.title%",
                "category": "%command.category%",
                "icon": "$(edit)"
            },
            {
                "command": "privateExtensions.configureRecommendedExtensions",
                "title": "%command.configureRecommendedExtensions.title%",
                "category": "%command.category%",
                "icon": "$(edit)"
            },
            {
                "command": "privateExtensions.refresh",
                "title": "%command.refresh.title%",
                "category": "%command.category%",
                "icon": "$(refresh)"
            },
            {
                "command": "privateExtensions.extension.install",
                "title": "%command.extension.install.title%"
            },
            {
                "command": "privateExtensions.extension.uninstall",
                "title": "%command.extension.uninstall.title%"
            },
            {
                "command": "privateExtensions.extension.update",
                "title": "%command.extension.update.title%",
                "icon": {
                    "light": "media/light/update.svg",
                    "dark": "media/dark/update.svg"
                }
            },
            {
                "command": "privateExtensions.extension.install.anotherVersion",
                "title": "%command.extension.install.anotherVersion.title%"
            },
            {
                "command": "privateExtensions.extension.switchChannels",
                "title": "%command.extension.switchChannels.title%"
            },
            {
                "command": "privateExtensions.extension.copyInformation",
                "title": "%command.extension.copyInformation.title%"
            },
            {
                "command": "privateExtensions.registry.add",
                "title": "%command.registry.add.title%",
                "category": "%command.category%",
                "icon": "$(new-folder)"
            },
            {
                "command": "privateExtensions.registry.remove",
                "title": "%command.registry.remove.title%",
                "category": "%command.category%"
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "privateExtensions",
                    "title": "%viewsContainers.activitybar.privateExtensions.title%",
                    "icon": "media/extensions.svg"
                }
            ]
        },
        "views": {
            "privateExtensions": [
                {
                    "id": "privateExtensions.extensions",
                    "name": "%views.privateExtensions.extensions.name%"
                },
                {
                    "id": "privateExtensions.recommended",
                    "name": "%views.privateExtensions.recommended.name%"
                }
            ]
        },
        "viewsWelcome": [
            {
                "view": "privateExtensions.extensions",
                "contents": "%views.privateExtensions.extensions.noExtensions%"
            },
            {
                "view": "privateExtensions.extensions",
                "contents": "%views.privateExtensions.extensions.configure%",
                "when": "workbenchState != empty"
            },
            {
                "view": "privateExtensions.recommended",
                "contents": "%views.privateExtensions.recommended.noExtensions%"
            },
            {
                "view": "privateExtensions.recommended",
                "contents": "%views.privateExtensions.recommended.configure%",
                "when": "workbenchState != empty"
            }
        ],
        "menus": {
            "view/title": [
                {
                    "command": "privateExtensions.configureWorkspaceRegistries",
                    "when": "view == privateExtensions.extensions && workbenchState != empty",
                    "group": "navigation"
                },
                {
                    "command": "privateExtensions.refresh",
                    "when": "view == privateExtensions.extensions",
                    "group": "navigation"
                },
                {
                    "command": "privateExtensions.checkForUpdates",
                    "when": "view == privateExtensions.extensions",
                    "group": "extensions"
                },
                {
                    "command": "privateExtensions.registry.add",
                    "when": "view == privateExtensions.extensions",
                    "group": "registry"
                },
                {
                    "command": "privateExtensions.configureRecommendedExtensions",
                    "when": "view == privateExtensions.recommended && workbenchState != empty",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "privateExtensions.extension.install",
                    "when": "view =~ /^privateExtensions/ && viewItem =~ /available/",
                    "group": "install"
                },
                {
                    "command": "privateExtensions.extension.uninstall",
                    "when": "view =~ /^privateExtensions/ && viewItem =~ /installed|update/",
                    "group": "install"
                },
                {
                    "command": "privateExtensions.extension.update",
                    "when": "view =~ /^privateExtensions/ && viewItem =~ /update/",
                    "group": "inline"
                },
                {
                    "command": "privateExtensions.extension.install.anotherVersion",
                    "when": "view =~ /^privateExtensions/ && viewItem =~ /installed|update/",
                    "group": "installVersion"
                },
                {
                    "command": "privateExtensions.extension.switchChannels",
                    "when": "view =~ /^privateExtensions/ && viewItem =~ /installed|update/",
                    "group": "installVersion"
                },
                {
                    "command": "privateExtensions.extension.copyInformation",
                    "when": "view =~ /^privateExtensions/ && viewItem =~ /extension/",
                    "group": "other"
                },
                {
                    "command": "privateExtensions.registry.remove",
                    "when": "view == privateExtensions.extensions && viewItem == registry.user",
                    "group": "registries"
                }
            ],
            "commandPalette": [
                {
                    "command": "privateExtensions.refresh",
                    "when": "false"
                },
                {
                    "command": "privateExtensions.extension.install",
                    "when": "false"
                },
                {
                    "command": "privateExtensions.extension.uninstall",
                    "when": "false"
                },
                {
                    "command": "privateExtensions.extension.update",
                    "when": "false"
                },
                {
                    "command": "privateExtensions.extension.install.anotherVersion",
                    "when": "false"
                },
                {
                    "command": "privateExtensions.extension.switchChannels",
                    "when": "false"
                },
                {
                    "command": "privateExtensions.extension.copyInformation",
                    "when": "false"
                }
            ]
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run package",
        "clean": "rimraf ./dist ./out",
        "compile": "webpack",
        "watch": "webpack --watch",
        "package": "webpack --mode production --devtool hidden-source-map",
        "test-compile": "tsc -p ./",
        "test-watch": "tsc -watch -p ./",
        "pretest": "npm run test-compile && npm run lint",
        "lint": "eslint src --ext ts",
        "test": "node ./out/test/runTest.js"
    },
    "devDependencies": {
        "@types/cacache": "^12.0.1",
        "@types/chai": "^4.3.0",
        "@types/chai-subset": "^1.3.3",
        "@types/glob": "^7.2.0",
        "@types/is-unc-path": "^1.0.0",
        "@types/libnpmsearch": "^2.0.1",
        "@types/mocha": "^9.0.0",
        "@types/node": "^14.18.0",
        "@types/npm-package-arg": "^6.1.0",
        "@types/npm-registry-fetch": "^8.0.2",
        "@types/pacote": "^11.1.0",
        "@types/rimraf": "^3.0.2",
        "@types/semver": "^7.3.9",
        "@types/sinon": "^10.0.6",
        "@types/source-map-support": "^0.5.3",
        "@types/valid-url": "^1.0.3",
        "@types/vscode": "^1.63.0",
        "@typescript-eslint/eslint-plugin": "^5.7.0",
        "@typescript-eslint/parser": "^5.7.0",
        "chai": "^4.2.0",
        "chai-subset": "^1.6.0",
        "chai-subset-in-order": "^3.0.0",
        "eslint": "^8.4.1",
        "eslint-config-prettier": "^8.1.0",
        "eslint-import-resolver-typescript": "^2.5.0",
        "eslint-plugin-import": "^2.25.3",
        "eslint-plugin-prettier": "^4.0.0",
        "json-loader": "^0.5.7",
        "license-checker-webpack-plugin": "^0.2.1",
        "lodash.template": "^4.5.0",
        "mocha": "^9.1.3",
        "nock": "^13.2.1",
        "prettier": "^2.5.1",
        "sinon": "^12.0.1",
        "source-map-support": "^0.5.21",
        "ts-loader": "^9.2.6",
        "typescript": "^4.5.4",
        "vsce": "^2.5.1",
        "vscode-test": "^1.4.1",
        "webpack": "^5.65.0",
        "webpack-cli": "^4.9.1"
    },
    "dependencies": {
        "cacache": "^12.0.4",
        "fp-ts": "^2.11.5",
        "glob": "^7.2.0",
        "io-ts": "^2.2.12",
        "is-unc-path": "^1.0.0",
        "jsonc-parser": "^3.0.0",
        "libnpmsearch": "^2.0.2",
        "memoize-one": "^6.0.0",
        "node-noop": "^1.0.0",
        "npm-package-arg": "^8.1.0",
        "npm-registry-fetch": "^4.0.7",
        "pacote": "^9.5.12",
        "rimraf": "^3.0.2",
        "sanitize-filename": "^1.6.3",
        "semver": "^7.3.2",
        "valid-url": "^1.0.9",
        "vscode-nls": "^5.0.0"
    },
    "prettier": {
        "singleQuote": true,
        "trailingComma": "all",
        "tabWidth": 4,
        "printWidth": 120,
        "endOfLine": "auto"
    }
}
